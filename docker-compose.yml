version: '3.8'

services:
  # Cats
  cats:
    container_name: cats
    build:
      context: .
      dockerfile: ./apps/cats/Dockerfile
      target: development
    env_file:
      - ./apps/cats/.env
    depends_on:
      - postgres-template
      - rabbitmq-template
      - redis-template
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev:prisma cats

  # Root
  root:
    container_name: root
    build:
      context: .
      dockerfile: ./apps/root/Dockerfile
      target: development
    env_file:
      - ./apps/root/.env
    ports:
      - '3000:3000'
    depends_on:
      - postgres-template
      - rabbitmq-template
      - redis-template
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev:prisma root

  # RabbitMQ for event bus
  rabbitmq-template:
    image: rabbitmq
    ports:
      - '5672:5672'

  # Redis for caching
  redis-template:
    image: redis:6.0
    container_name: redis-template
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}

  # Postgres database (Prisma)
  postgres-template:
    image: postgres:15.0
    container_name: postgres-template
    restart: always
    shm_size: 2gb
    ports:
      - '5432:5432'
    command: postgres -c max_connections=1000 -c shared_buffers=3GB
    environment:
      POSTGRES_HOST: ${PG_HOST}
      POSTGRES_PORT: ${PG_PORT}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - postgres-template:/var/lib/postgresql/data

volumes:
  postgres-template:
    name: database
